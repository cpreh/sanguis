// Generated by CoffeeScript 1.7.1
(function() {
  var canvas, ctx, draw, drawRect, img, mandel, mouse_pos, raw_mouse_pos, setMax, setMin, spanning, xmax, xmin, xpos, ymax, ymin, ypos, _ref;

  mandel = function(x0, y0) {
    var counter, x, xtmp, y;
    x = 0;
    y = 0;
    counter = 0;
    while ((x * x + y * y) < 4.0 && counter < 500) {
      counter++;
      xtmp = x * x - y * y + x0;
      y = 2 * x * y + y0;
      x = xtmp;
    }
    if (x * x + y * y < 4.0) {
      return -1;
    }
    return counter % 64;
  };

  xmin = -2.2;

  xmax = 0.6;

  ymin = -1.2;

  ymax = 1.2;

  canvas = document.getElementById('canvas');

  ctx = canvas.getContext('2d');

  img = void 0;

  draw = function() {
    var col, h, i, w, x, y, _i, _j, _ref, _ref1;
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    img = ctx.getImageData(0, 0, canvas.width, canvas.height);
    w = canvas.width;
    h = canvas.height;
    for (y = _i = 0, _ref = h - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
      for (x = _j = 0, _ref1 = w - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
        i = (x + y * w) * 4;
        col = mandel((x / w) * (xmax - xmin) + xmin, (y / h) * (ymax - ymin) + ymin);
        col *= 4;
        if (col < 0) {
          img.data[i] = 0;
          img.data[i + 1] = 0;
          img.data[i + 2] = 0;
          img.data[i + 3] = 255;
        } else {
          img.data[i] = col;
          img.data[i + 1] = 0;
          img.data[i + 2] = col;
          img.data[i + 3] = 255;
        }
      }
    }
    return ctx.putImageData(img, 0, 0);
  };

  raw_mouse_pos = function(event) {
    var rect;
    rect = canvas.getBoundingClientRect();
    return [event.clientX - rect.left, event.clientY - rect.top];
  };

  mouse_pos = function(event) {
    var rect;
    rect = canvas.getBoundingClientRect();
    return [((event.clientX - rect.left) / canvas.width) * (xmax - xmin) + xmin, ((event.clientY - rect.top) / canvas.height) * (ymax - ymin) + ymin];
  };

  _ref = [0, 0], xpos = _ref[0], ypos = _ref[1];

  spanning = false;

  setMin = function(e) {
    var _ref1, _ref2;
    _ref1 = mouse_pos(e), xmin = _ref1[0], ymin = _ref1[1];
    _ref2 = raw_mouse_pos(e), xpos = _ref2[0], ypos = _ref2[1];
    return spanning = true;
  };

  setMax = function(e) {
    var _ref1;
    _ref1 = mouse_pos(e), xmax = _ref1[0], ymax = _ref1[1];
    spanning = false;
    return draw();
  };

  drawRect = function(e) {
    var x, y, _ref1;
    if (!spanning) {
      return;
    }
    ctx.putImageData(img, 0, 0);
    _ref1 = raw_mouse_pos(e), x = _ref1[0], y = _ref1[1];
    ctx.fillStyle = 'rgba(255,255,255,0.3)';
    return ctx.fillRect(xpos, ypos, x - xpos, y - ypos);
  };

  canvas.addEventListener('mousedown', setMin);

  canvas.addEventListener('mouseup', setMax);

  canvas.addEventListener('mousemove', drawRect);

  window.addEventListener('load', draw);

}).call(this);
